from numpy import vstack,array
from numpy.random import rand
from scipy.cluster.vq import kmeans,vq,whiten

# 生成200组随机值数组，前100组每个值加0.5
data = vstack((rand(100,3) + array([.5,.5,.5]),rand(100,3)))

'''
1.白化数据
数据白化预处理是一种常见的数据预处理方法，作用是去除样本数据的冗余信息
基于每个特征标准化一组观测值.在运行K-Means之前，重新调整观测集的每个特征维度是有益的.每个特征除以所有观察值的标准偏差，得出单位方差.
'''
data = whiten(data)

'''
2.计算具有三个聚类的K-Means(质心根据需求设置)
执行K-Means一组观察向量形成K簇. K-Means算法调整质心，直到不能进行足够的进展，即失真的变化，因为最后一次迭代小于某个阈值.
'''
centroids,k = kmeans(data,3)
print(centroids)
'''
3.将每个样本分配给一个簇
vq 函数将'M'中的每个观察向量与'N' obs 数组中的质心进行比较将观察分配给最近的群集.它返回每个观察的簇和失真
'''
clx,k = vq(data,centroids)
print(clx)
#print(k) #对应索引样本与聚类中心的距离
'''
012代表不同的簇
[2 2 1 2 1 2 1 1 2 1 2 1 1 2 2 2 2 0 1 1 2 2 1 2 1 2 2 2 0 2 1 2 1 1 1 1 1
 1 2 2 0 0 2 1 1 2 1 1 1 0 1 1 1 2 2 0 1 0 1 2 2 2 1 1 2 2 1 0 2 2 2 2 1 0
 1 2 1 2 2 2 1 2 2 2 2 1 2 2 0 1 2 2 1 1 2 1 1 1 2 2 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0
 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0]
'''